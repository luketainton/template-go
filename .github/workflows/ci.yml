name: CI
on:
  workflow_dispatch:
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE.md'
      - '.gitignore'
      - 'CODEOWNERS'
  pull_request:

jobs:
  skip_duplicate:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v4.0.0
        with:
          github_token: ${{ github.token }}

  analyze:
    name: Analyze
    needs: skip_duplicate
    if: ${{ needs.skip_duplicate.outputs.should_skip == 'false' }}
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: go
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  lint:
    needs: skip_duplicate
    if: ${{ needs.skip_duplicate.outputs.should_skip == 'false' }}
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: write
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          gofmt: true
  
  test:
    needs: skip_duplicate
    if: ${{ needs.skip_duplicate.outputs.should_skip == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Test
        run: go test -race -covermode=atomic -coverprofile=coverage.out
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
  
  build:
    needs: skip_duplicate
    if: ${{ needs.skip_duplicate.outputs.should_skip == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Build
        run: go build -v ./...
